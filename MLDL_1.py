# -*- coding: utf-8 -*-
"""prob1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1c9IWcEZQDIl5pKV8HNZAmczSVD3QZCQ4
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
import numpy as np
# %matplotlib inline
x=[2,5,3,10]
y=[8,25,9,40]

x_mean=sum(x)/len(x)
y_mean=sum(y)/len(y)

x1=[]
for i in x:
    x1.append(i-x_mean)
y1=[]
for j in y:
    y1.append(j-y_mean)
sq_x1=np.multiply(x1,x1)
x1_y1=np.multiply(x1,y1)

d={'x':x,'y':y,'x-x_mean':x1,'y-y_mean':y1,'(x-x_mean)^2':sq_x1,'(x-x_mean)*(y-y_mean)':x1_y1}

df=pd.DataFrame(data=d)

print('x_mean='+ str(x_mean))
print('y_mean='+ str(y_mean))
print(df)

m=sum(x1_y1)/sum(sq_x1)

print("slope of the line is:"+str(m))


c=y_mean-x_mean*m
print("interception on y-axis is"+str(c))

print("The equation of the line is:")
print("Y = "+str(m)+" * X "+" "+str(c))
print()
print()


x_new=np.linspace(0,12,50)
y_new=m*x_new+c
plt.plot(x_new,y_new,color='black',label='linear regression')
plt.scatter(x,y,color='yellow',label='actual values')
plt.xlabel('X')
plt.ylabel('Y')
plt.legend()
plt.show()

